#include <iostream>
using namespace std;

string sortString(string s);

int main(void)
{
    string s
    s = sortString(s);
    cout << s << endl;
    return 0;
}
string sortString(string s)
{
    if (s.length() <= 1)
        return s;

    unsigned int i = 0;
    unsigned int j = 0;
    string a = "";
    string b = "";
    for (i = 0; i < s.length(); ++i){
        if ((i%2) == 0)
            a += s[i];
        else
            b += s[i];
    }
    a = sortString(a);
    b = sortString(b);
    s = "";
    i = j = 0;
    while (i < a.length() || j < b.length()) {
        if ((a[i] < b[j] && i < a.length()) || j >= b.length())
            s += a[i++];
        else
            s += b[j++];
    }
    return s;
}
